/**
A mixin which will add colour variant modifiers to the given target, changing the background and text colour
to match the variants.
 */
@mixin colour-variants($target: "&") {
  #{$target}--teal {
    background-color: var(--j-c-variant-teal);
    color: var(--j-c-variant-teal-text);
  }

  #{$target}--white {
    background-color: var(--j-c-variant-white);
    color: var(--j-c-variant-white-text);
  }

  #{$target}--blueGrey {
    background-color: var(--j-c-variant-blueGrey);
    color: var(--j-c-variant-blueGrey-text);
  }

  #{$target}--red {
    background-color: var(--j-c-variant-red);
    color: var(--j-c-variant-red-text);
  }

  #{$target}--green {
    background-color: var(--j-c-variant-green);
    color: var(--j-c-variant-green-text);
  }

  #{$target}--orange {
    background-color: var(--j-c-variant-orange);
    color: var(--j-c-variant-orange-text);
  }

  #{$target}--blue {
    background-color: var(--j-c-variant-blue);
    color: var(--j-c-variant-blue-text);
  }

  #{$target}--purple {
    background-color: var(--j-c-variant-purple);
    color: var(--j-c-variant-purple-text);
  }

  #{$target}--pink {
    background-color: var(--j-c-variant-pink);
    color: var(--j-c-variant-pink-text);
  }

  #{$target}--yellow {
    background-color: var(--j-c-variant-yellow);
    color: var(--j-c-variant-yellow-text);
  }
}

/**
A mixin which will add colour variant modifiers to the given target, changing the background and text colour
to match the variant interaction colours on hover and focus.
 */
@mixin colour-variants-interaction($target: "&") {
  #{$target}--teal {
    &:hover,
    &:focus-visible {
      background-color: var(--j-c-variant-teal-interaction);
      color: var(--j-c-variant-teal-text-interaction);
    }
  }

  #{$target}--white {
    &:hover,
    &:focus-visible {
      background-color: var(--j-c-variant-white-interaction);
      color: var(--j-c-variant-white-text-interaction);
    }
  }

  #{$target}--blueGrey {
    &:hover,
    &:focus-visible {
      background-color: var(--j-c-variant-blueGrey-interaction);
      color: var(--j-c-variant-blueGrey-text-interaction);
    }
  }

  #{$target}--red {
    &:hover,
    &:focus-visible {
      background-color: var(--j-c-variant-red-interaction);
      color: var(--j-c-variant-red-text-interaction);
    }
  }

  #{$target}--green {
    &:hover,
    &:focus-visible {
      background-color: var(--j-c-variant-green-interaction);
      color: var(--j-c-variant-green-text-interaction);
    }
  }

  #{$target}--orange {
    &:hover,
    &:focus-visible {
      background-color: var(--j-c-variant-orange-interaction);
      color: var(--j-c-variant-orange-text-interaction);
    }
  }

  #{$target}--blue {
    &:hover,
    &:focus-visible {
      background-color: var(--j-c-variant-blue-interaction);
      color: var(--j-c-variant-blue-text-interaction);
    }
  }

  #{$target}--purple {
    &:hover,
    &:focus-visible {
      background-color: var(--j-c-variant-purple-interaction);
      color: var(--j-c-variant-purple-text-interaction);
    }
  }

  #{$target}--pink {
    &:hover,
    &:focus-visible {
      background-color: var(--j-c-variant-pink-interaction);
      color: var(--j-c-variant-pink-text-interaction);
    }
  }

  #{$target}--yellow {
    &:hover,
    &:focus-visible {
      background-color: var(--j-c-variant-yellow-interaction);
      color: var(--j-c-variant-yellow-text-interaction);
    }
  }
}

/**
A mixin which will add colour variant modifiers to the given target, changing the background and text colour
to match the variant interaction colours WITHOUT hover or focus selectors.
This is useful where interactivity styling is handled via adding CSS classes rather than just using hover/focus.
 */
@mixin colour-variants-manual-interaction($target: "&") {
  #{$target}--teal {
    background-color: var(--j-c-variant-teal-interaction);
    color: var(--j-c-variant-teal-text-interaction);
  }

  #{$target}--white {
    background-color: var(--j-c-variant-white-interaction);
    color: var(--j-c-variant-white-text-interaction);
  }

  #{$target}--blueGrey {
    background-color: var(--j-c-variant-blueGrey-interaction);
    color: var(--j-c-variant-blueGrey-text-interaction);
  }

  #{$target}--red {
    background-color: var(--j-c-variant-red-interaction);
    color: var(--j-c-variant-red-text-interaction);
  }

  #{$target}--green {
    background-color: var(--j-c-variant-green-interaction);
    color: var(--j-c-variant-green-text-interaction);
  }

  #{$target}--orange {
    background-color: var(--j-c-variant-orange-interaction);
    color: var(--j-c-variant-orange-text-interaction);
  }

  #{$target}--blue {
    background-color: var(--j-c-variant-blue-interaction);
    color: var(--j-c-variant-blue-text-interaction);
  }

  #{$target}--purple {
    background-color: var(--j-c-variant-purple-interaction);
    color: var(--j-c-variant-purple-text-interaction);
  }

  #{$target}--pink {
    background-color: var(--j-c-variant-pink-interaction);
    color: var(--j-c-variant-pink-text-interaction);
  }

  #{$target}--yellow {
    background-color: var(--j-c-variant-yellow-interaction);
    color: var(--j-c-variant-yellow-text-interaction);
  }
}
